{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2021-03-22T22:14:05.715Z",
    "end": "2021-03-22T22:14:10.450Z",
    "duration": 4735,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "38774f10-0ef1-4a0f-80c3-e22506f58686",
      "title": "",
      "fullFile": "cypress/integration/interceptingAndModifyingRequestAndResponse.spec.js",
      "file": "cypress/integration/interceptingAndModifyingRequestAndResponse.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a722ca34-aff3-4497-8827-4c57fc56c0de",
          "title": "Testing intercepting and modifying the request and response",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Example first test",
              "fullTitle": "Testing intercepting and modifying the request and response Example first test",
              "timedOut": null,
              "duration": 4648,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// cy.intercept('POST', '**/articles', req => {\n//     req.body.article.description = 'This is a description 2';\n// }).as('postArticles');\ncy.intercept('POST', '**/articles', function (req) {\n  req.reply(function (res) {\n    expect(res.body.article.description).to.equal('This is a description');\n    res.body.article.description = 'This is a description 2';\n  });\n}).as('postArticles');\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is a title');\ncy.get('[formcontrolname=\"description\"]').type('This is a description');\ncy.get('[formcontrolname=\"body\"]').type('This is a body of the Article');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(function (xhr) {\n  expect(xhr.response.statusCode).to.equal(200);\n  expect(xhr.request.body.article.body).to.equal('This is a body of the Article');\n  expect(xhr.response.body.article.description).to.equal('This is a description 2');\n});",
              "err": {},
              "uuid": "b0425485-4e19-4d3b-a4ed-14395bc51d4e",
              "parentUUID": "a722ca34-aff3-4497-8827-4c57fc56c0de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b0425485-4e19-4d3b-a4ed-14395bc51d4e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4648,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}